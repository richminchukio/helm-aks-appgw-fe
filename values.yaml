aks-appgw-fe:
  aad-pod-identity:
    enabled: true
  cert-manager:
    enabled: true
    installCRDs: false # cert-manager dependent chart does not support helm3 CRDs folder standard (IE: parent chart resources are created before CRDs.. that's bad), so you must manually install CRDs first. Check README.MD for more
    startupapicheck:
      enabled: false # cert manager dependent chart does not start without issues, so disable by this by default
  ingress-azure:
    appgw:
      usePrivateIP: false
      shared: false
    armAuth:
      type: aadPodIdentity
    enabled: true
    rbac:
      enabled: true

# Default values for aks-appgw-fe chart.
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

service:
  type: ClusterIP
  port: 80
  targetPort: 80

# -- deployment --

# the name given to your aad_pod_identity chart
aadpodidbinding: "aad-pod-identity"

env:
  # - name: key
  #   value: val
  
replicaCount: 2

image:
  repository: httpd
  pullPolicy: Always
  tag: ""

imagePullSecrets: []

# https://github.com/Azure/application-gateway-kubernetes-ingress/blob/master/docs/how-tos/minimize-downtime-during-deployments.md
lifecycle:
  preStop:
    exec:
      command: ["sleep", "90"]

livenessProbe:
  httpGet:
    path: /
    port: 80
  periodSeconds: 4
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: 80
  periodSeconds: 4
  timeoutSeconds: 5
  failureThreshold: 3

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}

# https://github.com/Azure/application-gateway-kubernetes-ingress/blob/master/docs/how-tos/minimize-downtime-during-deployments.md
terminationGracePeriodSeconds: 101

volumes:
  # - name: config-volume
  #   configMap:
  #     name: config-name
  # - name: secret-volume
  #   secret:
  #     secretName: secret-name

volumeMounts:
  # - name: config-volume
  #   mountPath: /app/config
  # - name: secret-volume
  #   mountPath: /app/secret
  #   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# -- issuer --
# enable for first helm use, once in the cluster/for subsequent pods with different ingress paths, disable recreation of the Issuer resource.

issuer:
  acme:
    email: "" # Your email for the ingress-azure helm chart dependency
    privateKeySecretRef:
      name: issuer-account-key-staging # we default the name of the cert-manager helm chart secret to staging in case you want to reuse the module for prod. Just change to issuer-account-key-prod
    server: "https://acme-staging-v02.api.letsencrypt.org/directory" # The letsencrypt.org staging server for the cert-manager helm chart. change to prod url for prod certs
    solvers:
    - http01:
        ingress:
          class: azure/application-gateway # the solver http class for the issuer CRD created by the cert-manager dependant helm chart
  enabled: true
  metadata:
    name: letsencrypt-staging

# -- ingress --
ingress:
  appgw:
    # https://github.com/Azure/application-gateway-kubernetes-ingress/blob/master/docs/how-tos/minimize-downtime-during-deployments.md
    connectionDraining: "true"
    connectionDrainingTimeout: "30"
    cookieBasedAffinity: "true"
  certManager:
    acmeChallengeType: http01
  host: "" # your Azure Public IP address DNS name/your own DNS entry
  path: /

# -- configmap --
configmap:
  enabled: false
  data: {}

# -- secret --
secret:
  enabled: false
  stringData: {}
